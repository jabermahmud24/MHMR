#!/usr/bin/env python3

from visual_kinematics.RobotSerial import *
import numpy as np
from math import pi


def main():
    #np.set_printoptions(precision=3, suppress=True)

    #dh_params = np.array([[0.78, 0, 0.5 * pi, 0.7 * pi],
     #                     [-0.06, 0.117, 0.5 * pi,  -pi],
      #                    [0, 0.219, 0.5 * pi, 0],
       #                   [0, 0.133, -0.5 * pi, 0],
        #                  [0, 0.197, 0.5 * pi, 0],
         #                 [0, 0.1245, -0.5 * pi, 0.],
          #                [0, 0.1385, 0.5 * pi,0],
           #               [0,0.1665, 0, 0]]) 
           
        # d, a , alpha, theta
    #dh_params = np.array([[0.78, 0, 0, 0],
     #                     [0, 0.219, -0.5 * pi, 0],
      #                    [0, 0.133, -0.5 * pi, 0],
       #                   [0, 0.197, 0.5 * pi, 0],
        #                  [0, 0.1245, -0.5 * pi, 0.],
         #                 [0, 0.1385, 0.5 * pi, 0.],
          #                [0,0.1665,  - 0.5 * pi, 0],
           #               [0, 0.1, pi, 0]])   
    
    # dh_params = np.array([[0.78, 0.117, 0, 0],
    #                       [0, 0.219, 0.5 * pi, 0],
    #                       [0, 0.133, -0.5 * pi, 0],
    #                       [0, 0.197, 0.5 * pi, 0],
    #                       [0, 0.1245, -0.5 * pi, 0.],
    #                       [0, 0.1385, 0.5 * pi,0],
    #                       [0,0.1665, 0, 0]]) 
    
    # dh_params = np.array([[0.72,0,0,0],
    #                       [0.06,0.117, -0.5*pi, 0],
    #                       [0.0, 0, -0.5*pi, 1.5*pi],
    #                       [0.219+0.133, 0,  -0.5 * pi, 0],
    #                       [0.0, 0, -0.5 * pi, pi],
    #                       [0.197+0.1245, 0, -0.5 * pi, 0],
    #                       [0.0, 0, -0.5 * pi, pi],
    #                       [0.1385+0.1665,0, 0, 1.5*pi]])
    
    dh_params = np.array([[0.72,0,0,0],
                          [0.06,0.117, -0.5*pi, 0],
                          [0, 0, 0.5*pi, 1.57],
                          [0.219+0.133, 0,  0.5 * pi, 0],
                          [0, 0, -0.5 * pi, 0],
                          [0.197+0.1245, 0, -0.5 * pi, 0],
                          [0, 0, +0.5 * pi,0],
                          [0.1385+0.1665,0, 0, 0]])
    
        # d, a , alpha, theta

#         Joint 1 (Fixed): a=0, alpha=0, d=0.72, theta_offset=0
# Joint 2: a=0.2734456016856156, alpha=0.19426264871232668, d=-0.11992202952998864, theta_offset=-0.3007014814208139
# Joint 3: a=0.500951446841026, alpha=-0.21605444506935195, d=-0.08166473940624866, theta_offset=-0.359894168300957
# Joint 4: a=0.06826159375934192, alpha=0.43188376062058187, d=-0.06017962995170849, theta_offset=-0.21881630949525346
# Joint 5: a=0.24947695197756198, alpha=-0.25801027703117707, d=-0.0032946862134285, theta_offset=-0.6223186156772519
# Joint 6: a=0.0519939859142231, alpha=-0.3310219463240553, d=-0.022663230402526373, theta_offset=-0.46248143722448515
# Joint 7: a=-0.08788918464967949, alpha=0.15353023747338534, d=0.09307420724990417, theta_offset=-0.03013294412073883
# Joint 8: a=0.2688677912022006, alpha=-0.9603824652970573, d=0.1540330654806295, theta_offset=0.10657695705080916


    # dh_params = np.array([
    #     [0.72, 0, 0, 0],
    #     [-0.11992202952998864, 0.2734456016856156, -0.3007014814208139, 0.19426264871232668],
    #     [-0.08166473940624866, 0.500951446841026, -0.359894168300957, -0.21605444506935195],
    #     [-0.06017962995170849, 0.06826159375934192, -0.21881630949525346, 0.43188376062058187],
    #     [-0.0032946862134285, 0.24947695197756198, -0.6223186156772519, -0.25801027703117707],
    #     [-0.022663230402526373, 0.0519939859142231, -0.46248143722448515, -0.3310219463240553],
    #     [0.09307420724990417, -0.08788918464967949, -0.03013294412073883, 0.15353023747338534],
    #     [0.1540330654806295, 0.2688677912022006, 0.10657695705080916, -0.9603824652970573]
    # ])

    # dh_params = np.array([ [0.72, 0, 0, 0],
    #                       [0.06619612981509813, 0.31484059476723875,-0.2992700238476925, -0.24044199760847357],
    #                       [0.06159807029378546, 0.18539237604525374, -0.24156551016191036, -0.22531223514663165],
    #                       [0.05110280442300506, 0.05790916109688036, 0.0381825902739499, -0.2089048726058682],
    #                       [0.0495329471758661, 0.24577918760836456,  -0.22370099422435608, -0.216390120611161],
    #                       [0.07185524409947451, 0.23210825253343367, -0.23005563289609024, -0.2595536200787721],
    #                       [0.10035887736913521, 0.1936015611209902, -0.1776697589195415, -0.3114412118853222],
    #                       [0.13231001447672622, 0.12783883649283875, -0.19839000683805288,-0.36595210760312374]])


    dh_params = np.array([
    [0.0739023784072292, 0.31616980752667984, -0.2784833561554686, 0.15088520235989844],
    [0.04157733070675221, 0.42673341042896884, -0.3500906620333638, -0.213818128535207],
    [0.01676641521765174, 0.03863418895464207, -0.21138168385886047, 0.41486628746325144],
    [0.11422844638204951, 0.3320451672919949, -0.6322090921377059, -0.2627493237638259],
    [0.09604436976435164, 0.05691354682202493, -0.4748225852312738, -0.3517347264123604],
    [0.14746952208644312, -0.13966145708323763, -0.0399045548352728, 0.16782385890612542],
    [0.19930261804750754, 0.34710639283360345, 0.0953124257059969, -0.9281074150712343]
])

#     Joint 1: a=0.31484059476723875, alpha=-0.2992700238476925, d=0.06619612981509813, theta_offset=-0.24044199760847357
# Joint 2: a=0.18539237604525374, alpha=-0.24156551016191036, d=0.06159807029378546, theta_offset=-0.22531223514663165
# Joint 3: a=0.05790916109688036, alpha=0.0381825902739499, d=0.05110280442300506, theta_offset=-0.2089048726058682
# Joint 4: a=0.24577918760836456, alpha=-0.22370099422435608, d=0.0495329471758661, theta_offset=-0.216390120611161
# Joint 5: a=0.23210825253343367, alpha=-0.23005563289609024, d=0.07185524409947451, theta_offset=-0.2595536200787721
# Joint 6: a=0.1936015611209902, alpha=-0.1776697589195415, d=0.10035887736913521, theta_offset=-0.3114412118853222
# Joint 7: a=0.12783883649283875, alpha=-0.19839000683805288, d=0.13231001447672622, theta_offset=-0.36595210760312374


    robot = RobotSerial(dh_params)

    # =====================================
    # forward
    # =====================================

    #theta = np.array([-2.262,  2.429,  0.269,  0.584, -0.542,  0.964,  2.145])
    #theta = np.array([-0.721,  2.598, -0.145,  0.269,  0.696,  1.254,  0.888])
    theta = np.array([-0.059058189392089844, 1.2858595848083496, 2.899223804473877, 1.8691558837890625, 2.756563663482666, 0.6396698951721191, -1.1581555604934692])

    # theta = np.array([0,0,0,0,0,0,0,0])
    
    f = robot.forward(theta)

    # print("-------forward-------")
    print("end frame t_4_4:")
    print(f.t_4_4)
    print(f.t_4_4[0,3])
    
    print("end frame xyz:")
    print(f.t_3_1.reshape([3, ]))
    print("end frame abc:")
    print(f.euler_3)
    #print("end frame rotational matrix:")
    #print(f.r_3_3)
    #print("end frame quaternion:")
    #print(f.q_4)
    #print("end frame angle-axis:")
    #print(f.r_3)

    robot.show()


if __name__ == "__main__":
    main()
